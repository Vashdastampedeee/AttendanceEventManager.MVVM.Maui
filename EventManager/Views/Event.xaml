<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="EventManager.Views.Event"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:EventManager.Controls"
    xmlns:model="clr-namespace:EventManager.Models"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewmodel="clr-namespace:EventManager.ViewModels"
    x:Name="ThisPage"
    Title="Event Setter"
    x:DataType="viewmodel:EventViewModel"
    BackgroundColor="{AppThemeBinding Light={DynamicResource BgColorLightGray},
                                      Dark={DynamicResource BgColorDarkGray}}">

    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior
            BindingContext="{Binding Source={x:Reference ThisPage}, Path=BindingContext}"
            Command="{Binding NavigatedToCommand}"
            EventName="NavigatedTo" />
    </ContentPage.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid
            Grid.Row="0"
            Padding="10"
            ColumnSpacing="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*" />
                <ColumnDefinition Width="0.15*" />
                <ColumnDefinition Width="0.15*" />
            </Grid.ColumnDefinitions>
            <Border
                BackgroundColor="{AppThemeBinding Light={DynamicResource BgColorWhite},
                                                  Dark={DynamicResource BgColorLightSlatedGray}}"
                HeightRequest="60"
                Stroke="{AppThemeBinding Light={DynamicResource Gray200},
                                         Dark={DynamicResource Gray600}}"
                StrokeShape="RoundRectangle 5">

                <SearchBar
                    Grid.Column="0"
                    BackgroundColor="{AppThemeBinding Light={DynamicResource BgColorWhite},
                                                      Dark={DynamicResource BgColorLightSlatedGray}}"
                    FontFamily="Roboto"
                    FontSize="Small"
                    HeightRequest="30"
                    Placeholder="Search"
                    PlaceholderColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                       Dark={DynamicResource TxtColorWhite}}"
                    SearchCommand="{Binding SearchEventsCommand}"
                    Text="{Binding SearchText, Mode=TwoWay}"
                    TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                Dark={DynamicResource TxtColorWhite}}">
                    <SearchBar.Behaviors>
                        <controls:HideSearchBarKeyboard />
                    </SearchBar.Behaviors>
                </SearchBar>

            </Border>
            <Button
                Grid.Column="1"
                BackgroundColor="{DynamicResource PrimaryColor}"
                Command="{Binding FilterEventsCommand}"
                FontAttributes="Bold"
                FontFamily="IconButtons"
                FontSize="Medium"
                Text="&#xF0B0;"
                TextColor="{StaticResource PrimaryColorText}" />
            <Button
                Grid.Column="2"
                BackgroundColor="{DynamicResource PrimaryColor}"
                Command="{Binding RefreshEventsCommand}"
                FontAttributes="Bold"
                FontFamily="IconButtons"
                FontSize="Medium"
                Text="&#xE800;"
                TextColor="{StaticResource PrimaryColorText}" />
        </Grid>

        <CollectionView
            Grid.Row="1"
            ItemsSource="{Binding Events}"
            RemainingItemsThreshold="1"
            RemainingItemsThresholdReachedCommand="{Binding LoadEventsDataCommand}"
            VerticalScrollBarVisibility="Never">

            <CollectionView.EmptyView>
                <Label
                    FontAttributes="Italic"
                    FontFamily="Roboto"
                    FontSize="Small"
                    HorizontalTextAlignment="Center"
                    IsVisible="{Binding IsNoDataVisible}"
                    Text="No events found"
                    TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                Dark={DynamicResource TxtColorWhite}}"
                    VerticalTextAlignment="Center" />
            </CollectionView.EmptyView>

            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="model:Event">
                    <Border
                        Margin="5"
                        Padding="10"
                        BackgroundColor="{AppThemeBinding Light={DynamicResource BgColorWhite},
                                                          Dark={DynamicResource BgColorLightSlatedGray}}"
                        Stroke="{AppThemeBinding Light={DynamicResource Gray200},
                                                 Dark={DynamicResource Gray600}}"
                        StrokeShape="RoundRectangle 5">

                        <Border.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodel:EventViewModel}}, Path=EventItemTappedCommand}" CommandParameter="{Binding Id}" />
                        </Border.GestureRecognizers>

                        <VerticalStackLayout Padding="5" Spacing="5">

                            <FlexLayout JustifyContent="SpaceBetween">
                                <Image
                                    Aspect="AspectFit"
                                    Source="{Binding EventImage, Mode=OneWay, Converter={StaticResource ByteArrayToImageSourceConverter}}"
                                    WidthRequest="120" />
                                <Label
                                    FontAttributes="Bold"
                                    FontFamily="Roboto"
                                    FontSize="Medium"
                                    HorizontalTextAlignment="End"
                                    IsVisible="{Binding IsDefaultVisible}"
                                    Text="Default"
                                    TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                                Dark={DynamicResource TxtColorWhite}}" />
                            </FlexLayout>

                            <StackLayout Spacing="5">

                                <Label FontFamily="Roboto" FontSize="Small">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span
                                                FontAttributes="Bold"
                                                Text="Name: "
                                                TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                                            Dark={DynamicResource TxtColorWhite}}" />
                                            <Span Text="{Binding EventName}" TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack}, Dark={DynamicResource TxtColorWhite}}" />
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>

                                <Label FontFamily="Roboto" FontSize="Small">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span
                                                FontAttributes="Bold"
                                                Text="Category: "
                                                TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                                            Dark={DynamicResource TxtColorWhite}}" />
                                            <Span Text="{Binding EventCategory}" TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack}, Dark={DynamicResource TxtColorWhite}}" />
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>

                                <Label FontFamily="Roboto" FontSize="Small">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span
                                                FontAttributes="Bold"
                                                Text="Date: "
                                                TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                                            Dark={DynamicResource TxtColorWhite}}" />
                                            <Span Text="{Binding EventDate}" TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack}, Dark={DynamicResource TxtColorWhite}}" />
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>

                                <Label FontFamily="Roboto" FontSize="Small">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span
                                                FontAttributes="Bold"
                                                Text="Time: "
                                                TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack},
                                                                            Dark={DynamicResource TxtColorWhite}}" />
                                            <Span Text="{Binding FormattedTime}" TextColor="{AppThemeBinding Light={DynamicResource TxtColorBlack}, Dark={DynamicResource TxtColorWhite}}" />
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>

                            </StackLayout>

                        </VerticalStackLayout>

                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <ActivityIndicator
            Grid.RowSpan="2"
            HorizontalOptions="Center"
            IsRunning="{Binding IsBusyPageIndicator}"
            IsVisible="{Binding IsBusyPageIndicator}"
            VerticalOptions="Center"
            Color="{DynamicResource PrimaryColor}" />

    </Grid>

</ContentPage>